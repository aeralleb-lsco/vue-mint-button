{"remainingRequest":"/Users/bel902/Documents/vue-mint-button/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/bel902/Documents/vue-mint-button/src/MintButton.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/bel902/Documents/vue-mint-button/src/MintButton.vue","mtime":1652313588269},{"path":"/Users/bel902/Documents/vue-mint-button/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/bel902/Documents/vue-mint-button/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/bel902/Documents/vue-mint-button/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/bel902/Documents/vue-mint-button/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBXZWIzIGZyb20gIndlYjMiOwppbXBvcnQgV2ViM01vZGFsIGZyb20gIndlYjNtb2RhbCI7CmltcG9ydCBXYWxsZXRDb25uZWN0UHJvdmlkZXIgZnJvbSAiQHdhbGxldGNvbm5lY3Qvd2ViMy1wcm92aWRlciI7CgpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IFsKICAgICJBQkkiLAogICAgIm5ldHdvcmsiLAogICAgInByaWNlIiwKICAgICJtZXRob2QiLAogICAgImNvbnRyYWN0IiwKICAgICJpbmZ1cmFJZCIsCiAgICAiZXhwbG9yZXJVcmwiLAogICAgInBhcmFtZXRlcnMiCiAgXSwKICBuYW1lOiAiTWludEJ1dHRvbiIsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGFjY291bnQ6ICIiLAogICAgICBiYWxhbmNlOiAwLAogICAgICB0b3RhbDogMCwKICAgICAgYW1vdW50OiAxLAogICAgICBpc01pbnRpbmc6IGZhbHNlLAogICAgICB3ZWIzOiAiIiwKICAgICAgcGVuZGluZzogIiIsCiAgICAgIG5ldHdvcmtzOiB7CiAgICAgICAgZXRoZXJldW06IDEsCiAgICAgICAgcmlua2VieTogNCwKICAgICAgICBwb2x5Z29uOiAxMzcsCiAgICAgICAgbXVtYmFpOiA4MDAwMSwKICAgICAgICBnYW5hY2hlOiA1Nzc3LAogICAgICB9LAogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICBhbW91bnQoKSB7CiAgICAgIGNvbnN0IGFwcCA9IHRoaXM7CiAgICAgIGlmIChhcHAuYW1vdW50ID4gNSkgewogICAgICAgIGFwcC5hbW91bnQgPSA1OwogICAgICB9CiAgICAgIGlmIChhcHAuYW1vdW50IDw9IDApIHsKICAgICAgICBhcHAuYW1vdW50ID0gMTsKICAgICAgfQogICAgICBhcHAudG90YWwgPSAoYXBwLnByaWNlICogYXBwLmFtb3VudCkudG9GaXhlZCgzKTsKICAgICAgY29uc29sZS5sb2coIi0tLS0tLS0tLXdhdGNoaW5nIHRvdGFsLS0tLS0tLS0tLS0tIiwgYXBwLnByaWNlLCBhcHAuYW1vdW50KTsKICAgIH0sCiAgfSwKICBtZXRob2RzOiB7CiAgICBhc3luYyBjb25uZWN0KCkgewogICAgICBjb25zdCBhcHAgPSB0aGlzOwogICAgICBsZXQgcHJvdmlkZXJPcHRpb25zID0ge307CiAgICAgIGlmIChhcHAuaW5mdXJhSWQgIT09IHVuZGVmaW5lZCkgewogICAgICAgIHByb3ZpZGVyT3B0aW9ucyA9IHsKICAgICAgICAgIHdhbGxldGNvbm5lY3Q6IHsKICAgICAgICAgICAgcGFja2FnZTogV2FsbGV0Q29ubmVjdFByb3ZpZGVyLAogICAgICAgICAgICBvcHRpb25zOiB7CiAgICAgICAgICAgICAgaW5mdXJhSWQ6IGFwcC5pbmZ1cmFJZCwKICAgICAgICAgICAgfSwKICAgICAgICAgIH0sCiAgICAgICAgfTsKICAgICAgfQogICAgICAvLyBJbnN0YW50aWF0aW5nIFdlYjNNb2RhbAogICAgICBjb25zdCB3ZWIzTW9kYWwgPSBuZXcgV2ViM01vZGFsKHsKICAgICAgICBjYWNoZVByb3ZpZGVyOiB0cnVlLAogICAgICAgIHByb3ZpZGVyT3B0aW9uczogcHJvdmlkZXJPcHRpb25zLAogICAgICB9KTsKICAgICAgY29uc3QgcHJvdmlkZXIgPSBhd2FpdCB3ZWIzTW9kYWwuY29ubmVjdCgpOwogICAgICBhcHAud2ViMyA9IGF3YWl0IG5ldyBXZWIzKHByb3ZpZGVyKTsKICAgICAgLy8gQ2hlY2tpbmcgaWYgbmV0d29ya0lkIG1hdGNoZXMKICAgICAgY29uc3QgbmV0SWQgPSBhd2FpdCBhcHAud2ViMy5ldGgubmV0LmdldElkKCk7CiAgICAgIGlmIChwYXJzZUludChuZXRJZCkgIT09IGFwcC5uZXR3b3Jrc1thcHAubmV0d29ya10pIHsKICAgICAgICBhbGVydCgiU3dpdGNoIHRvICIgKyBhcHAubmV0d29yayArICIgbmV0d29yayEiKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBjb25zdCBhY2NvdW50cyA9IGF3YWl0IGFwcC53ZWIzLmV0aC5nZXRBY2NvdW50cygpOwogICAgICAgIGlmIChhY2NvdW50cy5sZW5ndGggPiAwKSB7CiAgICAgICAgICBhcHAuYmFsYW5jZSA9IGF3YWl0IGFwcC53ZWIzLmV0aC5nZXRCYWxhbmNlKGFjY291bnRzWzBdKTsKICAgICAgICAgIGFwcC5hY2NvdW50ID0gYWNjb3VudHNbMF07CiAgICAgICAgICBhcHAuYmFsYW5jZSA9IHBhcnNlRmxvYXQoCiAgICAgICAgICAgIGFwcC53ZWIzLnV0aWxzLmZyb21XZWkoYXBwLmJhbGFuY2UsICJldGhlciIpCiAgICAgICAgICApLnRvRml4ZWQoMTApOwogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIGFzeW5jIG1pbnQoKSB7CiAgICAgIGNvbnN0IGFwcCA9IHRoaXM7CiAgICAgIGlmICghYXBwLmlzTWludGluZykgewogICAgICAgIGFwcC5pc01pbnRpbmcgPSB0cnVlOwogICAgICAgIHRyeSB7CiAgICAgICAgICBjb25zdCBuZnRDb250cmFjdCA9IG5ldyBhcHAud2ViMy5ldGguQ29udHJhY3QoYXBwLkFCSSwgYXBwLmNvbnRyYWN0KTsKICAgICAgICAgIGNvbnN0IHdlaSA9IGFwcC53ZWIzLnV0aWxzLnRvV2VpKGFwcC50b3RhbC50b1N0cmluZygpLCAiZXRoZXIiKTsKICAgICAgICAgIGNvbnNvbGUubG9nKCItLS0tLS0tLS0tLS1jb250cmFjdC0tLS0tLS0tLS0tLS0iLCB0aGlzLmNvbnRyYWN0KTsKICAgICAgICAgIGNvbnN0IGVzdGltYXRlZCA9IGF3YWl0IG5mdENvbnRyYWN0Lm1ldGhvZHNbYXBwLm1ldGhvZF0oKS5hcHBseShudWxsLCBhcHAucGFyYW1ldGVycykuZXN0aW1hdGVHYXMoCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBmcm9tOiBhcHAuYWNjb3VudCwKICAgICAgICAgICAgICB2YWx1ZTogd2VpLnRvU3RyaW5nKCksCiAgICAgICAgICAgIH0KICAgICAgICAgICk7CiAgICAgICAgICBjb25zdCBnYXNMaW1pdCA9IHBhcnNlSW50KGVzdGltYXRlZCAqIDEuMikudG9TdHJpbmcoKTsKICAgICAgICAgIGF3YWl0IG5mdENvbnRyYWN0Lm1ldGhvZHNbYXBwLm1ldGhvZF0oKQogICAgICAgICAgICAuc2VuZCh7CiAgICAgICAgICAgICAgZnJvbTogYXBwLmFjY291bnQsCiAgICAgICAgICAgICAgdmFsdWU6IHdlaS50b1N0cmluZygpLAogICAgICAgICAgICAgIGdhczogZ2FzTGltaXQsCiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIC5vbigidHJhbnNhY3Rpb25IYXNoIiwgKHBlbmRpbmcpID0+IHsKICAgICAgICAgICAgICBhcHAucGVuZGluZyA9IHBlbmRpbmc7CiAgICAgICAgICAgIH0pOwogICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgIGFsZXJ0KGUubWVzc2FnZSk7CiAgICAgICAgICBhcHAuaXNNaW50aW5nID0gZmFsc2U7CiAgICAgICAgfQogICAgICB9CiAgICB9LAogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMudG90YWwgPSB0aGlzLnByaWNlOwogIH0sCn07Cg=="},{"version":3,"sources":["MintButton.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"MintButton.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div class=\"mint-wrapper\">\n    <div class=\"fadeIn\" v-if=\"account\">\n      <div>\n        <p>You are minting with:</p>\n        <h3>\n          {{ account }}\n        </h3>\n      </div>\n\n      <input class=\"mint-amount\" type=\"number\" v-model=\"amount\" />\n      <p class=\"small\">\n        NFT<span v-if=\"amount > 1\">s</span> paying {{ total }} ETH<br />\n      </p>\n      <div class=\"btn mint-btn m-top-1\" v-if=\"!isMinting\" @click=\"mint()\">\n        Mint Now\n      </div>\n      <p class=\"m-top-1\" v-if=\"isMinting && !pending\">\n        Please confirm the transaction in Metamask\n      </p>\n      <p class=\"m-top-1\" v-if=\"isMinting && pending\">\n        Your transaction was submitted, waiting for confirmation at:\n      </p>\n      <a\n        v-if=\"explorerUrl !== undefined\"\n        :href=\"explorerUrl + pending\"\n        target=\"_blank\"\n        >{{ pending }}</a\n      >\n      <p v-if=\"explorerUrl === undefined\">{{ pending }}</p>\n    </div>\n    <div v-if=\"!account\">\n      <div class=\"btn mint-btn\" @click=\"connect()\">Connect Wallet</div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Web3 from \"web3\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\nexport default {\n  props: [\n    \"ABI\",\n    \"network\",\n    \"price\",\n    \"method\",\n    \"contract\",\n    \"infuraId\",\n    \"explorerUrl\",\n    \"parameters\"\n  ],\n  name: \"MintButton\",\n  data() {\n    return {\n      account: \"\",\n      balance: 0,\n      total: 0,\n      amount: 1,\n      isMinting: false,\n      web3: \"\",\n      pending: \"\",\n      networks: {\n        ethereum: 1,\n        rinkeby: 4,\n        polygon: 137,\n        mumbai: 80001,\n        ganache: 5777,\n      },\n    };\n  },\n  watch: {\n    amount() {\n      const app = this;\n      if (app.amount > 5) {\n        app.amount = 5;\n      }\n      if (app.amount <= 0) {\n        app.amount = 1;\n      }\n      app.total = (app.price * app.amount).toFixed(3);\n      console.log(\"---------watching total------------\", app.price, app.amount);\n    },\n  },\n  methods: {\n    async connect() {\n      const app = this;\n      let providerOptions = {};\n      if (app.infuraId !== undefined) {\n        providerOptions = {\n          walletconnect: {\n            package: WalletConnectProvider,\n            options: {\n              infuraId: app.infuraId,\n            },\n          },\n        };\n      }\n      // Instantiating Web3Modal\n      const web3Modal = new Web3Modal({\n        cacheProvider: true,\n        providerOptions: providerOptions,\n      });\n      const provider = await web3Modal.connect();\n      app.web3 = await new Web3(provider);\n      // Checking if networkId matches\n      const netId = await app.web3.eth.net.getId();\n      if (parseInt(netId) !== app.networks[app.network]) {\n        alert(\"Switch to \" + app.network + \" network!\");\n      } else {\n        const accounts = await app.web3.eth.getAccounts();\n        if (accounts.length > 0) {\n          app.balance = await app.web3.eth.getBalance(accounts[0]);\n          app.account = accounts[0];\n          app.balance = parseFloat(\n            app.web3.utils.fromWei(app.balance, \"ether\")\n          ).toFixed(10);\n        }\n      }\n    },\n    async mint() {\n      const app = this;\n      if (!app.isMinting) {\n        app.isMinting = true;\n        try {\n          const nftContract = new app.web3.eth.Contract(app.ABI, app.contract);\n          const wei = app.web3.utils.toWei(app.total.toString(), \"ether\");\n          console.log(\"------------contract-------------\", this.contract);\n          const estimated = await nftContract.methods[app.method]().apply(null, app.parameters).estimateGas(\n            {\n              from: app.account,\n              value: wei.toString(),\n            }\n          );\n          const gasLimit = parseInt(estimated * 1.2).toString();\n          await nftContract.methods[app.method]()\n            .send({\n              from: app.account,\n              value: wei.toString(),\n              gas: gasLimit,\n            })\n            .on(\"transactionHash\", (pending) => {\n              app.pending = pending;\n            });\n        } catch (e) {\n          alert(e.message);\n          app.isMinting = false;\n        }\n      }\n    },\n  },\n  mounted() {\n    this.total = this.price;\n  },\n};\n</script>\n\n<style>\n.btn {\n  display: inline-block;\n  font-weight: 400;\n  line-height: 1.5;\n  color: #050505;\n  text-align: center;\n  text-decoration: none;\n  vertical-align: middle;\n  cursor: pointer;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  user-select: none;\n  background-color: transparent;\n  border: 1px solid #050505;\n  padding: 0.375rem 0.75rem;\n  font-size: 1rem;\n  border-radius: 0.25rem;\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out,\n    border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n}\n\n.btn:hover {\n  background-color: #050505;\n  color: #ffffff;\n}\n\n.fadeIn {\n  -webkit-animation: fadeIn 2.5s cubic-bezier(0.39, 0.575, 0.565, 1) both;\n  animation: fadeIn 2.5s cubic-bezier(0.39, 0.575, 0.565, 1) both;\n}\n\n@-webkit-keyframes fadeIn {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@keyframes fadeIn {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\ninput {\n  font-size: 1.5rem;\n  border-radius: 5px;\n  margin: 5px 0;\n}\n\ninput:focus {\n  outline: rgba(0, 0, 0, 0.5) solid 2px;\n  -moz-box-shadow: 0 0 10px 1px rgba(0, 0, 0, 0.8);\n  -webkit-box-shadow: 0 0 10px 1px rgba(0, 0, 0, 0.8);\n  box-shadow: 0 0 10px 1px rgba(0, 0, 0, 0.8);\n}\n\n.m-top-1 {\n  margin-top: 1em;\n}\n\n.mint-wrapper {\n  padding: 30px;\n  text-align: center;\n}\n\np {\n  margin: 0;\n}\n\np.small {\n  font-size: 0.9rem;\n  font-style: italic;\n  color: #7d7d7d;\n}\n</style>\n"]}]}